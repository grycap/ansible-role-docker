- name: Include "{{ansible_os_family}}" tasks
  include: "{{ansible_os_family}}.yml"

- name: Create directory for the docker certs
  file:
    path: "/opt/docker_registry/certs"
    state: directory

- name: Include "{{docker_type_of_node}}" docker recipe
  include: "{{docker_type_of_node}}.yml"

- name: Include "{{docker_type_of_node}}" docker recipe
  include: "{{docker_type_of_node}}.yml"

- name: Run docker registry
  docker_container:
    name: registry
    image: registry:2
    volumes:
      - /opt/docker_registry:/var/lib/registry
      - /opt/docker_registry/certs:/certs
    ports:
     - "5000:5000"
    env:
        REGISTRY_HTTP_TLS_CERTIFICATE: /certs/ca.crt
        REGISTRY_HTTP_TLS_KEY: /certs/ca.key
    restart_policy: always

- name: Set DOCKER_OPTS
  lineinfile:
    dest: /etc/default/docker
    regexp: 'DOCKER_OPTS='
    line: 'DOCKER_OPTS="{{docker_opts}}"'
    create: yes
  when: docker_opts != ""
  notify:
  - restart docker

# Enable to read the docker default values
- stat:
    path: /lib/systemd/system/docker.service
  register: docker_service

- lineinfile:
    dest: /lib/systemd/system/docker.service
    insertbefore: '^ExecStart='
    line: 'EnvironmentFile=/etc/default/docker'
  notify:
  - reload systemctl
  - restart docker
  when: docker_service.stat.exists and ansible_os_family == "Debian"

- lineinfile:
    dest: /lib/systemd/system/docker.service
    regexp: '^(ExecStart=)(.*)(-H fd://)$'
    line: '\1\2\3 $DOCKER_OPTS'
    backrefs: yes
  notify:
  - reload systemctl
  - restart docker
  when: docker_service.stat.exists and
        ((ansible_os_family == "RedHat" and ansible_distribution_major_version == "7") or
        (ansible_os_family == "Debian"))
