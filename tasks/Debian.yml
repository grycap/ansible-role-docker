- name: Install dependencies in Deb systems
  apt: 
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - wget
    update_cache: yes
    cache_valid_time: 3600
    state: present

- name: Install dependencies in Deb systems
  apt: name=gnupg2,iptables
  when: ansible_distribution != "Ubuntu"

- name: Install dependencies in Deb systems
  apt: name=gnupg-agent
  when: ansible_distribution == "Ubuntu"

- name: Add Docker repo key
  apt_key: url="https://download.docker.com/linux/debian/gpg"
  ignore_errors: yes
  register: add_docker_repo

- name: Add Docker repo key (python 2.7.9 or older)
  shell: curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -qq - >/dev/null
  when: add_docker_repo is failed

- name: Add docker-ce  repo
  apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_channel }}'
  when: ansible_distribution == "Ubuntu"

- name: Add docker repo
  apt_repository: repo='deb https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable' state=present update_cache=yes
  when: ansible_distribution != "Ubuntu"

- block:

  - name: Install docker latest
    apt: name=docker-ce update_cache=yes
    when: docker_version == "latest"

  - name: Install docker {{ docker_version }}
    apt: name="docker-ce={{ docker_version }}" state=present force=yes update_cache=yes
    when: docker_version != "latest"

  - name: Install CRIU
    apt: name=criu state=present
    when: docker_install_criu and ansible_distribution_major_version == "16"

  when: not docker_containerd_only | bool

- block:

  # set version fixed until we know why 1.6.9 make k8s to fail
  - name: Install containerd.io
    register: containerd_installed
    apt:
      name: containerd.io
      state: present

  - name: Delete initial /etc/containerd/config.toml file
    file:
      path: /etc/containerd/config.toml
      state: absent
    when: containerd_installed is changed

  when: docker_containerd_only | bool


- block:

  - set_fact:
      nvidia_repo_name: nvidia-docker
      nvidia_package_name: nvidia-docker2
    when: not docker_containerd_only | bool

  - set_fact:
      nvidia_repo_name: nvidia-container-runtime
      nvidia_package_name: nvidia-container-runtime
    when: docker_containerd_only | bool

  - name: Download {{nvidia_repo_name}} apt list
    get_url:
      url: https://nvidia.github.io/{{nvidia_repo_name}}/{{ansible_distribution | lower}}{{ansible_distribution_version}}/{{nvidia_repo_name}}.list
      dest: /etc/apt/sources.list.d/{{nvidia_repo_name}}.list
    register: apt_list

  - name: Add nvidia-docker repo key
    apt_key:
      url: "https://nvidia.github.io/{{nvidia_repo_name}}/gpgkey"
      state: present

  - name: Ubuntu apt update
    apt: update_cache=yes
    when: apt_list is changed

  - name: Install nvidia-docker2 package
    apt: name={{nvidia_package_name}}

  when: docker_nvidia_support | bool
  